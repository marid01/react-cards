{"version":3,"sources":["main/ui/common/SuperInputText/SuperInputText.module.css","main/ui/common/SuperButton/SuperButton.module.css","main/ui/common/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/SuperEditableSpan/SuperEditableSpan.module.css","main/ui/common/SuperRadio/SuperRadio.module.css","main/ui/common/SuperRange/SuperRange.module.css","main/ui/common/SuperSelect/SuperSelect.module.css","main/ui/Routes/Routes.tsx","reportWebVitals.ts","main/ui/Error404/Error404.tsx","main/ui/Registration/Registration.tsx","main/ui/Profile/Profile.tsx","main/ui/ResetPassword/ResetPassword.tsx","main/ui/CreateNewPassword/CreateNewPassword.tsx","main/ui/common/SuperButton/SuperButton.tsx","main/ui/common/SuperCheckbox/SuperCheckbox.tsx","main/ui/common/SuperInputText/SuperInputText.tsx","main/ui/common/SuperEditableSpan/SuperEditableSpan.tsx","main/ui/common/SuperRadio/SuperRadio.tsx","main/ui/common/SuperRange/SuperRange.tsx","main/ui/common/SuperSelect/SuperSelect.tsx","main/ui/SuperComponents/SuperComponents.tsx","main/ui/LogIn/LogIn.tsx","main/ui/Header/Header.tsx","main/bll/logInReducer.ts","main/bll/registrationReducer.ts","main/bll/profileReducer.ts","main/bll/resetPasswordReducer.ts","main/bll/createNewPasswordReducer.ts","main/bll/error404Reducer.ts","main/bll/store.ts","main/ui/App.tsx","index.tsx","main/ui/Header/Header.module.css"],"names":["module","exports","Path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","Registration","Profile","ResetPassword","CreateNewPassword","SuperButton","red","className","restProps","finalClassName","classes","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","select","SuperComponents","style","fontWeight","marginLeft","LogIn","Routes","exact","path","render","from","to","Header","nav","item","activeClassName","active","initState","rootReducer","combineReducers","logIn","state","action","registration","profile","resetPassword","createNewPassword","error404","store","createStore","applyMiddleware","thunk","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb455428.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2DDA4\",\"errorInput\":\"SuperInputText_errorInput__1XiFc\",\"error\":\"SuperInputText_error__2LVVJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2YGHL\",\"red\":\"SuperButton_red__3xojV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1-Llv\",\"spanClassName\":\"SuperCheckbox_spanClassName__PJzbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__3aMwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__2UYNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3rssj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1y_1H\"};","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Error404 } from \"../Error404/Error404\";\r\nimport { Registration } from \"../Registration/Registration\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { ResetPassword } from \"../ResetPassword/ResetPassword\";\r\nimport { CreateNewPassword } from \"../CreateNewPassword/CreateNewPassword\";\r\nimport { SuperComponents } from \"../SuperComponents/SuperComponents\";\r\nimport { LogIn } from \"../LogIn/LogIn\";\r\n\r\nexport enum Path {\r\n  LogIn = \"/login\",\r\n  Registration = \"/registration\",\r\n  Profile = \"/profile\",\r\n  ResetPassword = \"/resetPassword\",\r\n  CreateNewPassword = \"/createNewPassword\",\r\n  SuperComponents = \"/superComponents\",\r\n  Error404 = \"/404\",\r\n}\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={\"/\"} render={() => <div>Empty page</div>} />\r\n        <Route path={Path.LogIn} render={() => <LogIn />} />\r\n        <Route path={Path.Registration} render={() => <Registration />} />\r\n        <Route path={Path.Profile} render={() => <Profile />} />\r\n        <Route path={Path.ResetPassword} render={() => <ResetPassword />} />\r\n        <Route\r\n          path={Path.CreateNewPassword}\r\n          render={() => <CreateNewPassword />}\r\n        />\r\n        <Route path={Path.SuperComponents} render={() => <SuperComponents />} />\r\n        <Route path={Path.Error404} render={() => <Error404 />} />\r\n        <Redirect from={\"*\"} to={Path.Error404} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n  return <div>Error 404</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n  return <div>Registration</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n  return <div>Profile</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ResetPassword = () => {\r\n  return <div>Reset password</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CreateNewPassword = () => {\r\n  return <div>Create new password</div>;\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport classes from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${red ? classes.red : classes.default} ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport classes from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked); // works with both onChange and onChangeChecked !\r\n  };\r\n\r\n  const finalInputClassName = `${classes.checkbox} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={classes.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport classes from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === \"Enter\" && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const finalSpanClassName = `${classes.error} ${\r\n    spanClassName ? spanClassName : \"\"\r\n  }`;\r\n  const finalInputClassName = `${\r\n    error ? classes.errorInput : classes.superInput\r\n  } ${className}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"text\"}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  HTMLAttributes,\r\n  useState,\r\n} from \"react\";\r\nimport classes from \"./SuperEditableSpan.module.css\";\r\nimport { SuperInputText } from \"../SuperInputText/SuperInputText\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLSpanElement>,\r\n  HTMLSpanElement\r\n>;\r\n\r\ntype SuperEditableSpanType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string; // input props\r\n\r\n  spanProps?: DefaultSpanPropsType; // span props\r\n};\r\n\r\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\r\n  autoFocus, // игнорировать изменение этого пропса\r\n  onBlur,\r\n  onEnter,\r\n  spanProps,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { children, onDoubleClick, className, ...restSpanProps } =\r\n    spanProps || {};\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false);\r\n\r\n    onEnter && onEnter();\r\n  };\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false);\r\n\r\n    onBlur && onBlur(e);\r\n  };\r\n  const onDoubleClickCallBack = (\r\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n  ) => {\r\n    setEditMode(true);\r\n\r\n    onDoubleClick && onDoubleClick(e);\r\n  };\r\n\r\n  const spanClassName = `${classes.editableSpan} ${className}`;\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <SuperInputText\r\n          autoFocus\r\n          onBlur={onBlurCallback}\r\n          onEnter={onEnterCallback}\r\n          {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n        />\r\n      ) : (\r\n        <span\r\n          onDoubleClick={onDoubleClickCallBack}\r\n          className={spanClassName}\r\n          {...restSpanProps}\r\n        >\r\n          {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n          {children || restProps.value}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport classes from \"./SuperRadio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const SuperRadio: React.FC<SuperRadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            type={\"radio\"}\r\n            name={name}\r\n            checked={o === value}\r\n            value={o}\r\n            onChange={onChangeCallback}\r\n            className={classes.radio}\r\n            {...restProps}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <>{mappedOptions}</>;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport classes from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeRange?: (value: number) => void;\r\n  value: number;\r\n};\r\n\r\nexport const SuperRange: React.FC<SuperRangePropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  const finalRangeClassName = `${classes.range} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"range\"}\r\n        onChange={onChangeCallback}\r\n        className={finalRangeClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport classes from \"./SuperSelect.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const SuperSelect: React.FC<SuperSelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <option key={o + \"-\" + i} value={o}>\r\n          {o}\r\n        </option>\r\n      ))\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      onChange={onChangeCallback}\r\n      className={classes.select}\r\n      {...restProps}\r\n    >\r\n      {mappedOptions}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SuperButton } from \"../common/SuperButton/SuperButton\";\r\nimport { SuperCheckbox } from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport { SuperEditableSpan } from \"../common/SuperEditableSpan/SuperEditableSpan\";\r\nimport { SuperInputText } from \"../common/SuperInputText/SuperInputText\";\r\nimport { SuperRadio } from \"../common/SuperRadio/SuperRadio\";\r\nimport { SuperRange } from \"../common/SuperRange/SuperRange\";\r\nimport { SuperSelect } from \"../common/SuperSelect/SuperSelect\";\r\n\r\nexport const SuperComponents = () => {\r\n  return (\r\n    <div>\r\n      <div>SuperComponents</div>\r\n      <div>\r\n        <SuperInputText />\r\n        <span style={{ fontWeight: \"bold\" }}>InputText</span>\r\n      </div>\r\n      <div>\r\n        <SuperButton> x </SuperButton>\r\n        <span style={{ fontWeight: \"bold\" }}>Button</span>\r\n      </div>\r\n      <div>\r\n        <SuperCheckbox />\r\n        <span style={{ fontWeight: \"bold\" }}>Checkbox</span>\r\n      </div>\r\n      <div>\r\n        <SuperEditableSpan value={\"Enter your text here...\"} />\r\n        <span style={{ fontWeight: \"bold\" }}>EditableSpan</span>\r\n      </div>\r\n      <div>\r\n        <SuperSelect options={[\"x\", \"y\", \"z\"]} value={\"y\"} />\r\n        <span style={{ fontWeight: \"bold\" }}>Select</span>\r\n      </div>\r\n      <div>\r\n        <SuperRadio name={\"radio\"} options={[\"x\", \"y\", \"z\"]} value={\"y\"} />\r\n        <span style={{ fontWeight: \"bold\", marginLeft: \"10px\" }}>Radio</span>\r\n      </div>\r\n      <div>\r\n        <SuperRange value={50} />\r\n        <span style={{ fontWeight: \"bold\" }}>Range</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LogIn = () => {\r\n  return <div>Log in</div>;\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\nimport { Path } from \"../Routes/Routes\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.LogIn} activeClassName={classes.active}>\r\n          Log in\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.Registration} activeClassName={classes.active}>\r\n          Registration\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.Profile} activeClassName={classes.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.ResetPassword} activeClassName={classes.active}>\r\n          Reset password\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.CreateNewPassword} activeClassName={classes.active}>\r\n          Create new password\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.SuperComponents} activeClassName={classes.active}>\r\n          SuperComponents\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const logInReducer = (state = initState, action: any): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const registrationReducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const profileReducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const resetPasswordReducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const createNewPasswordReducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const error404Reducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { logInReducer } from \"./logInReducer\";\r\nimport { registrationReducer } from \"./registrationReducer\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { resetPasswordReducer } from \"./resetPasswordReducer\";\r\nimport { createNewPasswordReducer } from \"./createNewPasswordReducer\";\r\nimport { error404Reducer } from \"./error404Reducer\";\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nconst rootReducer = combineReducers({\r\n  logIn: logInReducer,\r\n  registration: registrationReducer,\r\n  profile: profileReducer,\r\n  resetPassword: resetPasswordReducer,\r\n  createNewPassword: createNewPasswordReducer,\r\n  error404: error404Reducer,\r\n});\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Header } from \"./Header/Header\";\r\nimport { store } from \"../bll/store\";\r\nimport { Routes } from \"./Routes/Routes\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <Header />\r\n          <Routes />\r\n        </Provider>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { App } from \"./main/ui/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3l0oE\",\"item\":\"Header_item__3EELq\",\"active\":\"Header_active__2sD5K\"};"],"sourceRoot":""}